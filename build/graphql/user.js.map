{"version":3,"sources":["../../src/graphql/user.js"],"names":["typeDefs","gql","resolver","Query","user","_parent","args","userShortcut","find","id","users","findAll","map","userObject","allUsers","findAllDeleted","Mutation","createUser","context","input","ForbiddenError","errors","NOT_LOGGED","findWithRole","loggedUser","findByUsername","username","userExist","UserInputError","USER_DUPLICATION","bcrypt","hash","password","create","full_name","labels_name","labelShortcut","findAllWithCondition","label_name","labels","setLabels","subjects_name","subjectShortcut","subject_name","subjects","setSubjects","roleShortcut","findBy","role_name","role","DEFAULT","setRole","deleteUser","update","deleted_at","Date","now","destroyUser","findDeleted","destroy","addLabel","user_id","label_id","label","removeLabel","clearLabels","removeLabels","addSubject","subject_id","subject","removeSubject","clearSubjects","removeSubjects","role_id"],"mappings":"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","sourcesContent":["import bcrypt from 'bcrypt';\nimport { gql, UserInputError, ForbiddenError } from 'apollo-server-express';\n\nimport { user as userShortcut, label as labelShortcut, subject as subjectShortcut, role as roleShortcut } from '../utils/shortcut';\nimport { userObject } from '../utils/relationMapper';\nimport { checkIsAdmin } from '../utils/authorization';\n\nimport errors from '../config/errors';\n\nexport const typeDefs = gql`\n  extend type Query {\n    user(id: ID!): User!\n    users: [User!]\n    allUsers: [User!]\n  }\n\n  extend type Mutation {\n    createUser(input: UserInput!): User\n\n    deleteUser(id: ID!): Boolean\n    destroyUser(id: ID!): Boolean\n\n    addLabel(user_id: String!, label_id: String!): Boolean\n    removeLabel(user_id: String!, label_id: String!): Boolean\n    clearLabels(user_id: String!): Boolean\n\n    addSubject(user_id: ID!, subject_id: ID!): Boolean\n    removeSubject(user_id: ID!, subject_id: ID!): Boolean\n    clearSubjects(user_id: ID!): Boolean\n\n    setRole(user_id: ID!, role_id: ID!): Boolean\n  }\n\n  input UserInput {\n    username: String!\n    full_name: String!\n    password: String!\n    labels_name: [String!]\n    subjects_name: [String!]\n    role_name: String!\n  }\n\n  type User {\n    id: ID!\n    username: String!\n    full_name: String!\n    password: String!\n    labels: [Label!]\n    subjects: [Subject!]\n    role: Role!\n    created_at: String!\n    updated_at: String\n    deleted_at: String\n  }\n`;\n\nexport const resolver = {\n  Query: {\n    user: async (_parent, args) => {\n      const user = await userShortcut.find(args.id);\n      return user ? userObject(user) : null;\n    },\n\n    users: async () => {\n      const users = await userShortcut.findAll();\n      return users.map(userObject);\n    },\n\n    allUsers: async () => {\n      const users = await userShortcut.findAllDeleted();\n      return users.map(userObject);\n    },\n  },\n\n  Mutation: {\n    /* +---------------------------------------------+ User */\n    createUser: async (_parent, { input: args }, context) => {\n      if (!context?.id) throw new ForbiddenError(errors.NOT_LOGGED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const userExist = await userShortcut.findByUsername(args.username);\n      if (userExist) throw new UserInputError(errors.USER_DUPLICATION);\n\n      const password = await bcrypt.hash(args.password, 12);\n      const user = await userShortcut.create({ username: args.username, full_name: args.full_name, password: password });\n\n      if (args.labels_name) {\n        const labels = await labelShortcut.findAllWithCondition({ label_name: args.labels_name });\n        await user.setLabels(labels);\n      }\n\n      if (args.subjects_name) {\n        const subjects = await subjectShortcut.findAllWithCondition({ subject_name: args.subjects_name });\n        await user.setSubjects(subjects);\n      }\n\n      const role = await roleShortcut.findBy({ role_name: args.role_name });\n      if (!role) throw new UserInputError(errors.DEFAULT);\n      await user.setRole(role);\n\n      return userObject(user);\n    },\n\n    deleteUser: async (_parent, args, context) => {\n      if (!context?.id) throw new ForbiddenError(errors.NOT_LOGGED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const user = await userShortcut.find(args.id);\n      if (!user) throw new UserInputError(errors.DEFAULT);\n\n      await user.update({ deleted_at: Date.now() });\n      return true;\n    },\n\n    destroyUser: async (_parent, args, context) => {\n      if (!context?.id) throw new ForbiddenError(errors.NOT_LOGGED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const user = await userShortcut.findDeleted(args.id);\n      if (!user) throw new UserInputError(errors.DEFAULT);\n\n      await user.destroy();\n      return true;\n    },\n\n    /* +---------------------------------------------+ Label */\n    addLabel: async (_parent, args, context) => {\n      if (!context?.id) throw new ForbiddenError(errors.NOT_LOGGED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const user = await userShortcut.find(args.user_id);\n      if (!user) throw new UserInputError(errors.DEFAULT);\n\n      const label = await labelShortcut.find(args.label_id);\n      if (!label) throw new UserInputError(errors.DEFAULT);\n\n      await user.addLabel(label);\n      return true;\n    },\n\n    removeLabel: async (_parent, args, context) => {\n      if (!context?.id) throw new ForbiddenError(errors.NOT_LOGGED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const user = await userShortcut.find(args.user_id);\n      if (!user) throw new UserInputError(errors.DEFAULT);\n\n      const label = await labelShortcut.find(args.label_id);\n      if (!label) throw new UserInputError(errors.DEFAULT);\n\n      await user.removeLabel(label);\n      return true;\n    },\n\n    clearLabels: async (_parent, args, context) => {\n      if (!context?.id) throw new ForbiddenError(errors.NOT_LOGGED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const user = await userShortcut.find(args.user_id);\n      if (!user) throw new UserInputError(errors.DEFAULT);\n\n      await user.removeLabels();\n      return true;\n    },\n\n    /* +---------------------------------------------+ Subject */\n    addSubject: async (_parent, args, context) => {\n      if (!context?.id) throw new ForbiddenError(errors.NOT_LOGGED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const user = await userShortcut.find(args.user_id);\n      if (!user) throw new UserInputError(errors.DEFAULT);\n\n      const subject = await subjectShortcut.find(args.subject_id);\n      if (!subject) throw new UserInputError(errors.DEFAULT);\n\n      await user.addSubject(subject);\n      return true;\n    },\n\n    removeSubject: async (_parent, args, context) => {\n      if (!context?.id) throw new ForbiddenError(errors.NOT_LOGGED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const user = await userShortcut.find(args.user_id);\n      if (!user) throw new UserInputError(errors.DEFAULT);\n\n      const subject = await subjectShortcut.find(args.subject_id);\n      if (!subject) throw new UserInputError(errors.DEFAULT);\n\n      await user.removeSubject(subject);\n      return true;\n    },\n\n    clearSubjects: async (_parent, args, context) => {\n      if (!context?.id) throw new ForbiddenError(errors.NOT_LOGGED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const user = await userShortcut.find(args.user_id);\n      if (!user) throw new UserInputError(errors.DEFAULT);\n\n      await user.removeSubjects();\n      return true;\n    },\n\n    /* +---------------------------------------------+ Role */\n    setRole: async (_parent, args, context) => {\n      if (!context?.id) throw new ForbiddenError(errors.NOT_LOGGED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const user = await userShortcut.find(args.user_id);\n      if (!user) throw new UserInputError(errors.DEFAULT);\n\n      const role = await roleShortcut.find(args.role_id);\n      if (!role) throw new UserInputError(errors.DEFAULT);\n\n      await user.setRole(role);\n      return true;\n    },\n  },\n};\n"],"file":"user.js"}