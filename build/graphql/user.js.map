{"version":3,"sources":["../../src/graphql/user.js"],"names":["typeDefs","gql","resolver","Query","user","_parent","args","userShortcut","find","id","users","findAll","map","userObject","allUsers","findAllDeleted","Mutation","createUser","context","input","ForbiddenError","errors","NOT_LOGGED","loggedUser","findWithRole","userExist","findByUsername","username","UserInputError","USER_DUPLICATION","password","bcrypt","hash","create","full_name","labels_name","labels","labelShortcut","findAllWithCondition","label_name","setLabels","subjects_name","subjects","subjectShortcut","subject_name","setSubjects","role","roleShortcut","findBy","role_name","DEFAULT","setRole","deleteUser","update","deleted_at","Date","now","destroyUser","findDeleted","destroy","addLabel","user_id","label","label_id","removeLabel","clearLabels","removeLabels","addSubject","subject","subject_id","removeSubject","clearSubjects","removeSubjects","role_id"],"mappings":"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","sourcesContent":["import bcrypt from 'bcrypt';\nimport { gql, UserInputError, ForbiddenError } from 'apollo-server-express';\n\nimport { user as userShortcut, label as labelShortcut, subject as subjectShortcut, role as roleShortcut } from '../utils/shortcut';\nimport { userObject } from '../utils/relationMapper';\nimport { checkIsAdmin } from '../utils/authorization';\n\nimport errors from '../config/errors';\n\nexport const typeDefs = gql`\n  extend type Query {\n    user(id: ID!): User!\n    users: [User!]\n    allUsers: [User!]\n  }\n\n  extend type Mutation {\n    createUser(input: UserInput!): User\n\n    deleteUser(id: ID!): Boolean\n    destroyUser(id: ID!): Boolean\n\n    addLabel(user_id: String!, label_id: String!): Boolean\n    removeLabel(user_id: String!, label_id: String!): Boolean\n    clearLabels(user_id: String!): Boolean\n\n    addSubject(user_id: ID!, subject_id: ID!): Boolean\n    removeSubject(user_id: ID!, subject_id: ID!): Boolean\n    clearSubjects(user_id: ID!): Boolean\n\n    setRole(user_id: ID!, role_id: ID!): Boolean\n  }\n\n  input UserInput {\n    username: String!\n    full_name: String!\n    password: String!\n    labels_name: [String!]\n    subjects_name: [String!]\n    role_name: String!\n  }\n\n  type User {\n    id: ID!\n    username: String!\n    full_name: String!\n    password: String!\n    labels: [Label!]\n    subjects: [Subject!]\n    role: Role!\n    created_at: String!\n    updated_at: String\n    deleted_at: String\n  }\n`;\n\nexport const resolver = {\n  Query: {\n    user: async (_parent, args) => {\n      const user = await userShortcut.find(args.id);\n      return user ? userObject(user) : null;\n    },\n\n    users: async () => {\n      const users = await userShortcut.findAll();\n      return users.map(userObject);\n    },\n\n    allUsers: async () => {\n      const users = await userShortcut.findAllDeleted();\n      return users.map(userObject);\n    },\n  },\n\n  Mutation: {\n    /* +---------------------------------------------+ User */\n    createUser: async (_parent, { input: args }, context) => {\n      if (!context?.id) throw new ForbiddenError(errors.NOT_LOGGED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const userExist = await userShortcut.findByUsername(args.username);\n      if (userExist) throw new UserInputError(errors.USER_DUPLICATION);\n\n      const password = await bcrypt.hash(args.password, 12);\n      const user = await userShortcut.create({ username: args.username, full_name: args.full_name, password: password });\n\n      if (args.labels_name) {\n        const labels = await labelShortcut.findAllWithCondition({ label_name: args.labels_name });\n        await user.setLabels(labels);\n      }\n\n      if (args.subjects_name) {\n        const subjects = await subjectShortcut.findAllWithCondition({ subject_name: args.subjects_name });\n        await user.setSubjects(subjects);\n      }\n\n      const role = await roleShortcut.findBy({ role_name: args.role_name });\n      if (!role) throw new UserInputError(errors.DEFAULT);\n      await user.setRole(role);\n\n      return userObject(user);\n    },\n\n    deleteUser: async (_parent, args, context) => {\n      if (!context?.id) throw new ForbiddenError(errors.NOT_LOGGED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const user = await userShortcut.find(args.id);\n      if (!user) throw new UserInputError(errors.DEFAULT);\n\n      await user.update({ deleted_at: Date.now() });\n      return true;\n    },\n\n    destroyUser: async (_parent, args, context) => {\n      if (!context?.id) throw new ForbiddenError(errors.NOT_LOGGED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const user = await userShortcut.findDeleted(args.id);\n      if (!user) throw new UserInputError(errors.DEFAULT);\n\n      await user.destroy();\n      return true;\n    },\n\n    /* +---------------------------------------------+ Label */\n    addLabel: async (_parent, args, context) => {\n      if (!context?.id) throw new ForbiddenError(errors.NOT_LOGGED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const user = await userShortcut.find(args.user_id);\n      if (!user) throw new UserInputError(errors.DEFAULT);\n\n      const label = await labelShortcut.find(args.label_id);\n      if (!label) throw new UserInputError(errors.DEFAULT);\n\n      await user.addLabel(label);\n      return true;\n    },\n\n    removeLabel: async (_parent, args, context) => {\n      if (!context?.id) throw new ForbiddenError(errors.NOT_LOGGED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const user = await userShortcut.find(args.user_id);\n      if (!user) throw new UserInputError(errors.DEFAULT);\n\n      const label = await labelShortcut.find(args.label_id);\n      if (!label) throw new UserInputError(errors.DEFAULT);\n\n      await user.removeLabel(label);\n      return true;\n    },\n\n    clearLabels: async (_parent, args, context) => {\n      if (!context?.id) throw new ForbiddenError(errors.NOT_LOGGED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const user = await userShortcut.find(args.user_id);\n      if (!user) throw new UserInputError(errors.DEFAULT);\n\n      await user.removeLabels();\n      return true;\n    },\n\n    /* +---------------------------------------------+ Subject */\n    addSubject: async (_parent, args, context) => {\n      if (!context?.id) throw new ForbiddenError(errors.NOT_LOGGED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const user = await userShortcut.find(args.user_id);\n      if (!user) throw new UserInputError(errors.DEFAULT);\n\n      const subject = await subjectShortcut.find(args.subject_id);\n      if (!subject) throw new UserInputError(errors.DEFAULT);\n\n      await user.addSubject(subject);\n      return true;\n    },\n\n    removeSubject: async (_parent, args, context) => {\n      if (!context?.id) throw new ForbiddenError(errors.NOT_LOGGED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const user = await userShortcut.find(args.user_id);\n      if (!user) throw new UserInputError(errors.DEFAULT);\n\n      const subject = await subjectShortcut.find(args.subject_id);\n      if (!subject) throw new UserInputError(errors.DEFAULT);\n\n      await user.removeSubject(subject);\n      return true;\n    },\n\n    clearSubjects: async (_parent, args, context) => {\n      if (!context?.id) throw new ForbiddenError(errors.NOT_LOGGED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const user = await userShortcut.find(args.user_id);\n      if (!user) throw new UserInputError(errors.DEFAULT);\n\n      await user.removeSubjects();\n      return true;\n    },\n\n    /* +---------------------------------------------+ Role */\n    setRole: async (_parent, args, context) => {\n      if (!context?.id) throw new ForbiddenError(errors.NOT_LOGGED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const user = await userShortcut.find(args.user_id);\n      if (!user) throw new UserInputError(errors.DEFAULT);\n\n      const role = await roleShortcut.find(args.role_id);\n      if (!role) throw new UserInputError(errors.DEFAULT);\n\n      await user.setRole(role);\n      return true;\n    },\n  },\n};\n"],"file":"user.js"}