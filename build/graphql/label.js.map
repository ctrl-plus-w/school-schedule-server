{"version":3,"sources":["../../src/graphql/label.js"],"names":["typeDefs","gql","resolvers","Query","label","_parent","args","labelShortcut","find","id","labels","findAll","map","getObjectWithUsers","Mutation","createLabel","context","input","AuthenticationError","errors","NOT_ALLOWED","user","userShortcut","findWithRole","labelExist","findByName","label_name","UserInputError","LABEL_DUPLICATION","database","models","create","deleteLabel","DEFAULT","users","length","LABEL_CASCADE","update","deleted_at","Date","now","destroyLabel","destroy"],"mappings":"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","sourcesContent":["import { AuthenticationError, gql, UserInputError } from 'apollo-server-core';\n\nimport errors from '../config/errors';\nimport database from '../database';\n\nimport { label as labelShortcut, user as userShortcut } from '../utils/shortcut';\nimport { getObjectWithUsers } from '../utils/relationMapper';\nimport { checkIsAdmin } from '../utils/authorization';\n\nexport const typeDefs = gql`\n  extend type Query {\n    label(id: ID!): Label!\n    labels: [Label!]\n  }\n\n  extend type Mutation {\n    createLabel(input: LabelInput!): Label!\n\n    deleteLabel(id: ID!): Boolean\n\n    destroyLabel(id: ID!): Boolean\n  }\n\n  input LabelInput {\n    label_name: String!\n  }\n\n  type Label {\n    id: ID!\n    label_name: String!\n    users: [User!]\n    created_at: String!\n    updated_at: String\n    deleted_at: String\n  }\n`;\n\nexport const resolvers = {\n  Query: {\n    label: async (_parent, args) => {\n      const label = await labelShortcut.find(args.id);\n      return getObjectWithUsers(label);\n    },\n\n    labels: async () => {\n      const labels = await labelShortcut.findAll();\n      return labels.map(getObjectWithUsers);\n    },\n  },\n\n  Mutation: {\n    createLabel: async (_parent, { input: args }, context) => {\n      if (!context?.id) throw new AuthenticationError(errors.NOT_ALLOWED);\n\n      const user = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(user);\n\n      const labelExist = await labelShortcut.findByName(args.label_name);\n      if (labelExist) throw new UserInputError(errors.LABEL_DUPLICATION);\n\n      const label = await database.models.label.create({ label_name: args.label_name });\n      return getObjectWithUsers(label);\n    },\n\n    deleteLabel: async (_parent, args, context) => {\n      if (!context?.id) throw new AuthenticationError(errors.NOT_ALLOWED);\n\n      const user = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(user);\n\n      const label = await labelShortcut.find(args.id, database.models.user);\n      if (!label) throw new UserInputError(errors.DEFAULT);\n\n      if (label?.users.length > 0) throw new UserInputError(errors.LABEL_CASCADE);\n\n      await label.update({ deleted_at: Date.now() });\n      return true;\n    },\n\n    destroyLabel: async (_parent, args, context) => {\n      if (!context?.id) throw new AuthenticationError(errors.NOT_ALLOWED);\n\n      const user = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(user);\n\n      const label = await labelShortcut.find(args.id, database.models.user);\n      if (!label) throw new UserInputError(errors.DEFAULT);\n\n      if (label?.users.length > 0) throw new UserInputError(errors.LABEL_CASCADE);\n\n      await label.destroy();\n      return true;\n    },\n  },\n};\n"],"file":"label.js"}