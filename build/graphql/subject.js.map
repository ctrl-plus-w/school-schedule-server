{"version":3,"sources":["../../src/graphql/subject.js"],"names":["typeDefs","gql","resolvers","Query","subject","_parent","args","subjectShortcut","find","subject_id","subjects","findAll","map","getObjectWithUsers","Mutation","createSubject","context","input","id","ForbiddenError","errors","NOT_ALLOWED","loggedUser","userShortcut","findWithRole","subjectExist","findByName","subject_name","UserInputError","SUBJECT_DUPLICATION","create","color","deleteSubject","database","models","user","DEFAULT","users","length","SUBJECT_CASCADE","update","deleted_at","Date","now","destroySubject","findDeleted","destroy"],"mappings":"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","sourcesContent":["import { ForbiddenError, gql, UserInputError } from 'apollo-server-core';\n\nimport errors from '../config/errors';\nimport database from '../database';\n\nimport { getObjectWithUsers } from '../utils/relationMapper';\nimport { checkIsAdmin } from '../utils/authorization';\nimport { subject as subjectShortcut, user as userShortcut } from '../utils/shortcut';\n\nexport const typeDefs = gql`\n  extend type Query {\n    subject(id: ID!): Subject!\n    subjects: [Subject!]\n  }\n\n  extend type Mutation {\n    createSubject(input: SubjectInput): Subject!\n\n    deleteSubject(id: ID!): Boolean\n\n    destroySubject(id: ID!): Boolean\n  }\n\n  input SubjectInput {\n    subject_name: String!\n    color: String!\n  }\n\n  type Subject {\n    id: ID!\n    subject_name: String!\n    color: String!\n    users: [User!]\n    created_at: String!\n    updated_at: String\n    deleted_at: String\n  }\n`;\n\nexport const resolvers = {\n  Query: {\n    subject: async (_parent, args) => {\n      const subject = await subjectShortcut.find(args.subject_id);\n      return subject ? getObjectWithUsers(subject) : null;\n    },\n\n    subjects: async () => {\n      const subjects = await subjectShortcut.findAll();\n      return subjects.map(getObjectWithUsers);\n    },\n  },\n  Mutation: {\n    createSubject: async (_parent, { input: args }, context) => {\n      if (!context?.id) throw new ForbiddenError(errors.NOT_ALLOWED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const subjectExist = await subjectShortcut.findByName(args.subject_name);\n      if (subjectExist) throw new UserInputError(errors.SUBJECT_DUPLICATION);\n\n      const subject = await subjectShortcut.create({ subject_name: args.subject_name, color: args.color });\n      return getObjectWithUsers(subject);\n    },\n\n    deleteSubject: async (_parent, args, context) => {\n      if (!context?.id) throw new ForbiddenError(errors.NOT_ALLOWED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const subject = await subjectShortcut.find(args.id, database.models.user);\n      if (!subject) throw new UserInputError(errors.DEFAULT);\n\n      if (subject?.users.length > 0) throw new UserInputError(errors.SUBJECT_CASCADE);\n\n      await subject.update({ deleted_at: Date.now() });\n      return true;\n    },\n\n    destroySubject: async (_parent, args, context) => {\n      if (!context?.id) throw new ForbiddenError(errors.NOT_ALLOWED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const subject = await subjectShortcut.findDeleted(args.id, database.models.user);\n      if (!subject) throw new UserInputError(errors.DEFAULT);\n\n      if (subject?.users.length > 0) throw new UserInputError(errors.SUBJECT_CASCADE);\n\n      await subject.destroy();\n      return true;\n    },\n  },\n};\n"],"file":"subject.js"}