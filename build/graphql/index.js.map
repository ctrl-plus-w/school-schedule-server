{"version":3,"sources":["../../src/graphql/index.js"],"names":["Query","gql","Mutation","typeDefs","User","Label","Auth","Role","Subject","Event","resolvers","userResolvers","labelResolvers","authResolvers","roleResolvers","subjectResolvers","eventResolvers"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA;AAEA,MAAMA,KAAK,OAAGC,qBAAH,iHAAX;AAMA,MAAMC,QAAQ,OAAGD,qBAAH,sHAAd;AAMO,MAAME,QAAQ,GAAG,CAACH,KAAD,EAAQE,QAAR,EAAkBE,cAAlB,EAAwBC,eAAxB,EAA+BC,cAA/B,EAAqCC,cAArC,EAA2CC,iBAA3C,EAAoDC,eAApD,CAAjB;;AACA,MAAMC,SAAS,GAAG,mBAAMC,cAAN,EAAqBC,gBAArB,EAAqCC,eAArC,EAAoDC,eAApD,EAAmEC,kBAAnE,EAAqFC,gBAArF,CAAlB","sourcesContent":["import { merge } from 'lodash';\nimport { gql } from 'apollo-server-core';\n\nimport { typeDefs as User, resolver as userResolvers } from './user';\nimport { typeDefs as Label, resolvers as labelResolvers } from './label';\nimport { typeDefs as Auth, resolvers as authResolvers } from './auth';\nimport { typeDefs as Role, resolvers as roleResolvers } from './role';\nimport { typeDefs as Subject, resolvers as subjectResolvers } from './subject';\nimport { typeDefs as Event, resolvers as eventResolvers } from './event';\n\n// TODO : [x] Set findAll with { where: { deleted_at: null }}\n\nconst Query = gql`\n  type Query {\n    _empty: String\n  }\n`;\n\nconst Mutation = gql`\n  type Mutation {\n    _empty: String\n  }\n`;\n\nexport const typeDefs = [Query, Mutation, User, Label, Auth, Role, Subject, Event];\nexport const resolvers = merge(userResolvers, labelResolvers, authResolvers, roleResolvers, subjectResolvers, eventResolvers);\n"],"file":"index.js"}