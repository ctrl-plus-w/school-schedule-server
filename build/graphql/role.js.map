{"version":3,"sources":["../../src/graphql/role.js"],"names":["typeDefs","gql","resolvers","Query","role","_parent","args","roleShortcut","find","id","roles","findAll","map","getObjectWithUsers","Mutation","createRole","context","input","AuthenticationError","errors","NOT_ALLOWED","loggedUser","userShortcut","findWithRole","roleExist","findByName","role_name","UserInputError","ROLE_DUPLICATION","create","deleteRole","database","models","user","DEFAULT","users","length","ROLE_CASCADE","update","deleted_at","destroyRole","findDeleted","destroy"],"mappings":"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","sourcesContent":["import { AuthenticationError, gql, UserInputError } from 'apollo-server-core';\n\nimport errors from '../config/errors';\nimport database from '../database';\n\nimport { getObjectWithUsers } from '../utils/relationMapper';\n\nimport { checkIsAdmin } from '../utils/authorization';\nimport { role as roleShortcut, user as userShortcut } from '../utils/shortcut';\n\nexport const typeDefs = gql`\n  extend type Query {\n    role(id: ID!): Role!\n    roles: [Role!]\n  }\n\n  extend type Mutation {\n    createRole(input: RoleInput): Role!\n\n    deleteRole(id: ID!): Boolean\n\n    destroyRole(id: ID!): Boolean\n  }\n\n  input RoleInput {\n    role_name: String!\n  }\n\n  type Role {\n    id: ID!\n    role_name: String!\n    users: [User!]\n    created_at: String!\n    updated_at: String\n    deleted_at: String\n  }\n`;\n\nexport const resolvers = {\n  Query: {\n    role: async (_parent, args) => {\n      const role = await roleShortcut.find(args.id);\n      return getObjectWithUsers(role);\n    },\n\n    roles: async () => {\n      const roles = await roleShortcut.findAll();\n      return roles.map(getObjectWithUsers);\n    },\n  },\n  Mutation: {\n    createRole: async (_parent, { input: args }, context) => {\n      if (!context?.id) throw new AuthenticationError(errors.NOT_ALLOWED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const roleExist = await roleShortcut.findByName(args.role_name);\n      if (roleExist) throw new UserInputError(errors.ROLE_DUPLICATION);\n\n      const role = await roleShortcut.create({ role_name: args.role_name });\n      return getObjectWithUsers(role);\n    },\n\n    deleteRole: async (_parent, args, context) => {\n      if (!context?.id) throw new AuthenticationError(errors.NOT_ALLOWED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const role = await roleShortcut.find(args.id, database.models.user);\n      if (!role) throw new UserInputError(errors.DEFAULT);\n\n      if (role?.users.length > 0) throw new UserInputError(errors.ROLE_CASCADE);\n\n      await role.update({ deleted_at: null });\n      return true;\n    },\n\n    destroyRole: async (_parent, args, context) => {\n      if (!context?.id) throw new AuthenticationError(errors.NOT_ALLOWED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const role = await roleShortcut.findDeleted(args.id, database.models.user);\n      if (!role) throw new UserInputError(errors.DEFAULT);\n\n      if (role?.users.length > 0) throw new UserInputError(errors.ROLE_CASCADE);\n\n      await role.destroy();\n      return true;\n    },\n  },\n};\n"],"file":"role.js"}