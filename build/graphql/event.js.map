{"version":3,"sources":["../../src/graphql/event.js"],"names":["typeDefs","gql","resolvers","Query","event","_","args","eventShortcut","find","id","events","findAll","map","eventObject","allEvents","findAllDeleted","userEvents","_parent","_args","context","AuthenticationError","errors","NOT_LOGGED","userShortcut","database","models","label","user","DEFAULT","userLabelIds","labels","findAllByLabelIds","ownedEvents","findWithRole","model","where","userOwnedEvents","labelEvents","labelRelatedEvents","labelShortcut","users","usersId","usersIdStr","join","length","labelsSQL","query","type","QueryTypes","SELECT","labelsId","l","Mutation","createEvent","input","startDate","Date","start","now","isBefore","UserInputError","subject","subjectShortcut","subject_id","Error","hasSubject","userOwnSubject","EVENT_TAKEN","label_id","labelUserIds","sql","toISOString","request","userIdsFromLabels","userIds","filter","includes","USER_EVENT_TAKEN","create","link","description","obligatory","setLabel","setSubject","setUser","updateEvent","loggedUser","userIsOwner","ForbiddenError","NOT_EVENT_OWNER","update","deleteEvent","deleted_at","destroyEvent","findDeleted","destroy"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { QueryTypes } from 'sequelize';\nimport { AuthenticationError, ForbiddenError, gql, UserInputError } from 'apollo-server-express';\n\nimport moment from 'moment';\n\nimport { eventObject } from '../utils/relationMapper';\nimport {\n  user as userShortcut,\n  label as labelShortcut,\n  role as roleShortcut,\n  subject as subjectShortcut,\n  event as eventShortcut,\n} from '../utils/shortcut';\nimport { checkIsAdmin, checkIsProfessor } from '../utils/authorization';\n\nimport config from '../config';\nimport errors from '../config/errors';\n\nimport database from '../database';\n\nexport const typeDefs = gql`\n  extend type Query {\n    event(id: ID!): Event\n    events: [Event!]\n\n    allEvents: [Event!]\n\n    userEvents: [Event!]\n    ownedEvents: [Event!]\n\n    labelEvents(id: ID!): [Event!]\n    labelRelatedEvents(id: ID!): [Event!]\n  }\n\n  extend type Mutation {\n    createEvent(input: EventInput): Event\n\n    updateEvent(id: ID!, description: String, link: String, obligatory: Boolean): Boolean\n\n    deleteEvent(id: ID!): Boolean\n    destroyEvent(id: ID!): Boolean\n  }\n\n  input EventInput {\n    start: String!\n    link: String\n    description: String!\n    obligatory: Boolean!\n    label_id: ID!\n    subject_id: ID!\n  }\n\n  type Event {\n    id: ID!\n    start: String!\n    link: String\n    description: String!\n    obligatory: Boolean!\n    owner: User\n    label: Label\n    subject: Subject\n    created_at: String!\n    updated_at: String\n    deleted_at: String\n  }\n`;\n\nexport const resolvers = {\n  Query: {\n    event: async (_, args) => {\n      const event = await eventShortcut.find(args.id);\n      return eventObject(event);\n    },\n\n    events: async () => {\n      const events = await eventShortcut.findAll();\n      return events.map(eventObject);\n    },\n\n    allEvents: async () => {\n      const events = await eventShortcut.findAllDeleted();\n      return events.map(eventObject);\n    },\n\n    userEvents: async (_parent, _args, context) => {\n      if (!context?.id) throw new AuthenticationError(errors.NOT_LOGGED);\n\n      const user = await userShortcut.find(context.id, database.models.label);\n      if (!user) throw new AuthenticationError(errors.DEFAULT);\n\n      const userLabelIds = user.labels.map((label) => label.id);\n\n      const events = await eventShortcut.findAllByLabelIds(userLabelIds);\n      return events.map(eventObject);\n    },\n\n    ownedEvents: async (_parent, _args, context) => {\n      if (!context?.id) throw new AuthenticationError(errors.NOT_LOGGED);\n\n      const user = await userShortcut.findWithRole(context.id);\n      await checkIsProfessor(user);\n\n      const userOwnedEvents = await eventShortcut.findAll({ model: database.models.user, where: { id: context.id } });\n      return userOwnedEvents.map(eventObject);\n    },\n\n    labelEvents: async (_parent, args, context) => {\n      if (!context?.id) throw new AuthenticationError(errors.NOT_LOGGED);\n\n      const user = await userShortcut.findWithRole(context.id);\n      await checkIsProfessor(user);\n\n      const labelEvents = await eventShortcut.findAll({ model: database.models.label, where: { id: args.id } });\n      return labelEvents.map(eventObject);\n    },\n\n    labelRelatedEvents: async (_parent, args, context) => {\n      if (!context?.id) throw new AuthenticationError(errors.NOT_LOGGED);\n\n      const user = await userShortcut.findWithRole(context.id);\n      await checkIsProfessor(user);\n\n      const label = await labelShortcut.find(args.id, [database.models.user]);\n      const usersId = await label.users.map((user) => user.id);\n\n      const usersIdStr = usersId.map((id) => `'${id}'`).join(', ');\n      if (usersIdStr.length === 0) return [];\n\n      const labelsSQL = `SELECT Label.id FROM UserLabels JOIN Label ON UserLabels.label_id = Label.id JOIN User ON UserLabels.user_id = User.id WHERE User.id IN(${usersIdStr})`;\n      const labels = await database.query(labelsSQL, { type: QueryTypes.SELECT });\n\n      const labelsId = labels.map((l) => l.id);\n\n      const events = await eventShortcut.findAll({ model: database.models.label, where: { id: labelsId } });\n      return events.map(eventObject);\n    },\n  },\n\n  Mutation: {\n    // TODO : [x] Verify permissions of user when creating the event (subject owning etc...)\n    // TODO : [x] Set the user & role detection into the jwt and the request.\n    // TODO : [x] Verify if there is already an event for this label at this time.\n    // TODO : [x] Redefined error messages.\n    // TODO : [x] Check if date is not before today.\n    // TODO : [ ] Check if date is a round date. (database collision problems)\n\n    createEvent: async (_, { input: args }, context) => {\n      if (!context?.id) throw new AuthenticationError(errors.NOT_LOGGED);\n\n      const startDate = moment(new Date(args.start));\n      const now = moment(Date.now());\n      if (startDate.isBefore(now)) throw new UserInputError(errors.DEFAULT);\n\n      const user = await userShortcut.findWithRole(context.id, [database.models.subject]);\n      await checkIsProfessor(user);\n\n      const subject = await subjectShortcut.find(args.subject_id);\n      if (!subject) throw new Error(errors.DEFAULT);\n\n      const userOwnSubject = await user.hasSubject(subject);\n      if (!userOwnSubject) throw new Error(errors.DEFAULT);\n\n      const userOwnedEvents = await eventShortcut.findAll({ model: database.models.user, where: { id: context.id } });\n      if (userOwnedEvents > 0) throw new UserInputError(errors.EVENT_TAKEN);\n\n      const label = await labelShortcut.find(args.label_id, [database.models.user]);\n      if (!label) throw new UserInputError(errors.DEFAULT);\n\n      // Select every user which the label contains.\n      const labelUserIds = await label.users.map((user) => user.id);\n\n      // SQL Request select id of every user which have an event which start at the given start time.\n      const sql = `SELECT User.id FROM Event JOIN Label ON Event.label_id = Label.id JOIN UserLabels ON UserLabels.label_id = Label.id JOIN User ON UserLabels.user_id = User.id WHERE Event.start = \"${startDate.toISOString()}\"`;\n      const request = await database.query(sql, { type: QueryTypes.SELECT });\n\n      const userIdsFromLabels = request.map((user) => user.id);\n\n      // Intersection of the label users and the events which have and event at the given start time.\n      const userIds = userIdsFromLabels.filter((id) => labelUserIds.includes(id));\n      if (userIds.length > 0) throw new UserInputError(errors.USER_EVENT_TAKEN);\n\n      const event = await database.models.event.create({\n        start: startDate.toISOString(),\n        link: args.link ? args.link : '',\n        description: args.description,\n        obligatory: args.obligatory,\n      });\n\n      await event.setLabel(label);\n\n      await event.setSubject(subject);\n      await event.setUser(user);\n\n      return eventObject(event);\n    },\n\n    updateEvent: async (_, args, context) => {\n      if (!context?.id) throw new AuthenticationError(errors.NOT_LOGGED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id, [database.models.subject]);\n      await checkIsProfessor(loggedUser);\n\n      const event = await eventShortcut.find(args.id, [database.models.user]);\n      if (!event) throw new UserInputError(errors.DEFAULT);\n\n      const userIsOwner = event.user.id === loggedUser.id;\n      if (!userIsOwner) throw new ForbiddenError(errors.NOT_EVENT_OWNER);\n\n      await event.update({\n        description: 'description' in args ? args.description : event.description,\n        link: 'link' in args ? args.link : event.link,\n        obligatory: 'obligatory' in args ? args.obligatory : event.obligatory,\n      });\n      return true;\n    },\n\n    deleteEvent: async (_, args, context) => {\n      if (!context?.id) throw new AuthenticationError(errors.NOT_LOGGED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsProfessor(loggedUser);\n\n      const event = await eventShortcut.find(args.id, [database.models.user]);\n      if (!event) throw new UserInputError(errors.DEFAULT);\n\n      const userIsOwner = event.user.id === loggedUser.id;\n      if (!userIsOwner) throw new ForbiddenError(errors.NOT_EVENT_OWNER);\n\n      await event.update({ deleted_at: new Date() });\n      return true;\n    },\n\n    destroyEvent: async (_, args, context) => {\n      if (!context?.id) throw new AuthenticationError(errors.NOT_LOGGED);\n\n      const loggedUser = await userShortcut.findWithRole(context.id);\n      await checkIsAdmin(loggedUser);\n\n      const event = await eventShortcut.findDeleted(args.id, [database.models.user]);\n      if (!event) throw new UserInputError(errors.DEFAULT);\n\n      await event.destroy();\n      return true;\n    },\n  },\n};\n"],"file":"event.js"}