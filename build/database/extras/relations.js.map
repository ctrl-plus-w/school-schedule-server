{"version":3,"sources":["../../../src/database/extras/relations.js"],"names":["sequelize","models","event","label","role","subject","user","user_labels","user_subjects","belongsToMany","through","foreignKey","otherKey","other_key","hasOne","belongsTo","hasMany"],"mappings":";;;;;;;;;;;;qEAAe,iBAAOA,SAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gCAC6DA,SAAS,CAACC,MADvE,EACLC,KADK,qBACLA,KADK,EACEC,KADF,qBACEA,KADF,EACSC,IADT,qBACSA,IADT,EACeC,OADf,qBACeA,OADf,EACwBC,IADxB,qBACwBA,IADxB,EAC8BC,WAD9B,qBAC8BA,WAD9B,EAC2CC,aAD3C,qBAC2CA,aAD3C,EAGb;;AACAL,YAAAA,KAAK,CAACM,aAAN,CAAoBH,IAApB,EAA0B;AAAEI,cAAAA,OAAO,EAAEH,WAAX;AAAwBI,cAAAA,UAAU,EAAE,UAApC;AAAgDC,cAAAA,QAAQ,EAAE;AAA1D,aAA1B;AACAN,YAAAA,IAAI,CAACG,aAAL,CAAmBN,KAAnB,EAA0B;AAAEO,cAAAA,OAAO,EAAEH,WAAX;AAAwBI,cAAAA,UAAU,EAAE,SAApC;AAA+CC,cAAAA,QAAQ,EAAE;AAAzD,aAA1B,EALa,CAOb;;AACAP,YAAAA,OAAO,CAACI,aAAR,CAAsBH,IAAtB,EAA4B;AAAEI,cAAAA,OAAO,EAAEF,aAAX;AAA0BG,cAAAA,UAAU,EAAE,YAAtC;AAAoDE,cAAAA,SAAS,EAAE;AAA/D,aAA5B;AACAP,YAAAA,IAAI,CAACG,aAAL,CAAmBJ,OAAnB,EAA4B;AAAEK,cAAAA,OAAO,EAAEF,aAAX;AAA0BG,cAAAA,UAAU,EAAE,SAAtC;AAAiDE,cAAAA,SAAS,EAAE;AAA5D,aAA5B,EATa,CAWb;;AACAR,YAAAA,OAAO,CAACS,MAAR,CAAeZ,KAAf;AACAA,YAAAA,KAAK,CAACa,SAAN,CAAgBV,OAAhB,EAba,CAeb;;AACAF,YAAAA,KAAK,CAACa,OAAN,CAAcd,KAAd;AACAA,YAAAA,KAAK,CAACa,SAAN,CAAgBZ,KAAhB,EAjBa,CAmBb;;AACAG,YAAAA,IAAI,CAACQ,MAAL,CAAYZ,KAAZ,EAAmB;AAAES,cAAAA,UAAU,EAAE;AAAd,aAAnB;AACAT,YAAAA,KAAK,CAACa,SAAN,CAAgBT,IAAhB,EAAsB;AAAEK,cAAAA,UAAU,EAAE;AAAd,aAAtB,EArBa,CAuBb;;AACAP,YAAAA,IAAI,CAACY,OAAL,CAAaV,IAAb;AACAA,YAAAA,IAAI,CAACS,SAAL,CAAeX,IAAf;;AAzBa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["export default async (sequelize) => {\n  const { event, label, role, subject, user, user_labels, user_subjects } = sequelize.models;\n\n  // User / Label relation.\n  label.belongsToMany(user, { through: user_labels, foreignKey: 'label_id', otherKey: 'user_id' });\n  user.belongsToMany(label, { through: user_labels, foreignKey: 'user_id', otherKey: 'label_id' });\n\n  // Subject / User (owning) relation.\n  subject.belongsToMany(user, { through: user_subjects, foreignKey: 'subject_id', other_key: 'user_id' });\n  user.belongsToMany(subject, { through: user_subjects, foreignKey: 'user_id', other_key: 'subject_id' });\n\n  // Subject / Event relation.\n  subject.hasOne(event);\n  event.belongsTo(subject);\n\n  // Label / Event relation.\n  label.hasMany(event);\n  event.belongsTo(label);\n\n  // Subject / Owner relation.\n  user.hasOne(event, { foreignKey: 'owner_id' });\n  event.belongsTo(user, { foreignKey: 'owner_id' });\n\n  // User / Role relation.\n  role.hasMany(user);\n  user.belongsTo(role);\n};\n"],"file":"relations.js"}