{"version":3,"sources":["../../src/utils/shortcut.js"],"names":["shortcutModel","findWithCondition","id","conditions","includes","Promise","resolve","reject","database","models","model","findByPk","where","include","then","catch","find","deleted_at","findDeleted","findBy","findOne","findByName","name","findAllWithCondition","condition","findAll","findAllDeleted","label","user","findWithRole","role","findByUsername","username","create","full_name","password","subject","subject_name","color","role_name","event","startInterval","startDate","Date","endDate","setDate","getDate","Op","between","start","findAllBy","findAllByLabelIds","labelIds","labelId","in"],"mappings":"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","sourcesContent":["import { Op } from 'sequelize';\n\nimport { resetTime } from '../utils/date';\n\nimport database from '../database';\n\nclass shortcutModel {\n  /**\n   * Find a record by its id with the given conditions.\n   * @param {string} id The record id.\n   * @param {object} conditions The required conditions.\n   * @param {array} includes The models it should include.\n   * @returns An object.\n   */\n  static findWithCondition(id, conditions = {}, includes = []) {\n    return new Promise((resolve, reject) => {\n      database.models[this.model].findByPk(id, { where: conditions, include: includes }).then(resolve).catch(reject);\n    });\n  }\n\n  /**\n   * Find a record by its id.\n   * @param {string} id The record id.\n   * @param {array} includes The models it should include.\n   * @returns An object.\n   */\n  static find(id, includes = []) {\n    return new Promise((resolve, reject) => {\n      this.findWithCondition(id, { deleted_at: null }, includes).then(resolve).catch(reject);\n    });\n  }\n\n  /**\n   * Find a record by its id whether he is deleted or not.\n   * @param {string} id The record id.\n   * @param {array} includes The models it should include.\n   * @returns An object.\n   */\n  static findDeleted(id, includes = []) {\n    return new Promise((resolve, reject) => {\n      this.findWithCondition(id, includes).then(resolve).catch(reject);\n    });\n  }\n\n  /**\n   * Find a record by the given condition.\n   * @param {object} conditions The required conditions.\n   * @param {array} includes The models it should include.\n   * @returns An object.\n   */\n  static findBy(conditions, includes = []) {\n    return new Promise((resolve, reject) => {\n      database.models[this.model].findOne({ where: conditions, include: includes }).then(resolve).catch(reject);\n    });\n  }\n\n  /**\n   * Find a record by its name.\n   * @param {string} name The name of the record. (e.g. label > { label_name : 'name' })\n   * @param {array} includes The models it shoud include.\n   * @returns An object.\n   */\n  static findByName(name, includes = []) {\n    return new Promise((resolve, reject) => {\n      this.findBy({ [`${this.model}_name`]: name, deleted_at: null }, includes)\n        .then(resolve)\n        .catch(reject);\n    });\n  }\n\n  /**\n   * Get all records with the given conditions.\n   * @param {object} conditions The required conditions.\n   * @param {array} includes The models it should include.\n   * @returns An array of objects.\n   */\n  static findAllWithCondition(condition, includes = []) {\n    return new Promise((resolve, reject) => {\n      database.models[this.model].findAll({ where: condition, include: includes }).then(resolve).catch(reject);\n    });\n  }\n\n  /**\n   * Get all the records which aren't deleted.\n   * @param {array} includes The models it should include.\n   * @returns An array of objects.\n   */\n  static findAll(includes = []) {\n    return new Promise((resolve, reject) => {\n      this.findAllWithCondition({ deleted_at: null }, includes).then(resolve).catch(reject);\n    });\n  }\n\n  /**\n   * Get all the records whether they are deleted or not.\n   * @param {array} includes The models it should include.\n   * @returns An array of objects.\n   */\n  static findAllDeleted(includes = []) {\n    return new Promise((resolve, reject) => {\n      database.models[this.model].findAll({ include: includes }).then(resolve).catch(reject);\n    });\n  }\n}\n\nexport class label extends shortcutModel {\n  static get model() {\n    return 'label';\n  }\n}\n\nexport class user extends shortcutModel {\n  static get model() {\n    return 'user';\n  }\n\n  /**\n   * Find a user by its id and include its role.\n   * @param {string} id The user id.\n   * @param {array} includes The models it should include.\n   * @returns A user object.\n   */\n  static findWithRole(id, includes = []) {\n    return new Promise((resolve, reject) => {\n      this.find(id, [database.models.role, ...includes])\n        .then(resolve)\n        .catch(reject);\n    });\n  }\n\n  /**\n   * Find a user by its username.\n   * @param {string} username The user username.\n   * @param {array} includes The models it should include.\n   * @returns A user object.\n   */\n  static findByUsername(username, includes) {\n    return new Promise((resolve, reject) => {\n      this.findBy({ username: username, deleted_at: null }, includes).then(resolve).catch(reject);\n    });\n  }\n\n  /**\n   * Create a user.\n   * @param args The arguments provided to create the user. Must contain `username`, `full_name` and `password`.\n   * @returns The created user.\n   */\n  static create({ username, full_name, password }) {\n    return new Promise((resolve, reject) => {\n      database.models[this.model].create({ username, full_name, password }).then(resolve).catch(reject);\n    });\n  }\n}\n\nexport class subject extends shortcutModel {\n  static get model() {\n    return 'subject';\n  }\n\n  /**\n   * Create a subject.\n   * @param args The arguments provided to create the subject. Must contain `subject_name` and `color`.\n   * @returns The created user.\n   */\n  static create({ subject_name, color }) {\n    return new Promise((resolve, reject) => {\n      database.models[this.model].create({ subject_name, color }).then(resolve).catch(reject);\n    });\n  }\n}\n\nexport class role extends shortcutModel {\n  static get model() {\n    return 'role';\n  }\n\n  /**\n   * Create a role.\n   * @param args The arguments provided to create the role. Must contain `role_name`.\n   * @returns The created user.\n   */\n  static create({ role_name }) {\n    return new Promise((resolve, reject) => {\n      database.models[this.model].create({ role_name }).then(resolve).catch(reject);\n    });\n  }\n}\n\nexport class event extends shortcutModel {\n  static get model() {\n    return 'event';\n  }\n\n  /**\n   * Get the two week interval for the database request.\n   */\n  static get startInterval() {\n    const startDate = resetTime(new Date());\n    const endDate = new Date(new Date().setDate(new Date().getDate() + 14));\n\n    return { [Op.between]: [startDate, endDate] };\n  }\n\n  /**\n   * Get all the events which aren't deleted in the two weeks interval.\n   * @param {array} includes The models it should include.\n   * @returns An array of event objects.\n   */\n  static findAll(includes = []) {\n    const startDate = resetTime(new Date());\n    const endDate = new Date(new Date().setDate(new Date().getDate() + 14));\n\n    return new Promise((resolve, reject) => {\n      return this.findAllWithCondition({ start: { [Op.between]: [startDate, endDate] }, deleted_at: null }, includes)\n        .then(resolve)\n        .catch(reject);\n    });\n  }\n\n  /**\n   * Get all the events which aren't deleted in the two weeks interval with the given conditions.\n   * @param {object} conditions The required conditions.\n   * @param {array} includes The models it should include.\n   * @returns An array of event objects.\n   */\n  static findAllBy(conditions, includes = []) {\n    return new Promise((resolve, reject) => {\n      this.findAllWithCondition({ ...conditions, start: this.startInterval, deleted_at: null }, includes)\n        .then(resolve)\n        .catch(reject);\n    });\n  }\n\n  /**\n   * Get all the events where the label is in the given array which aren't deleted.\n   * @param {array} labelIds The array of labels ids.\n   * @param {array} includes The models it should include.\n   * @returns An array of event objects.\n   */\n  static findAllByLabelIds(labelIds, includes = []) {\n    return new Promise((resolve, reject) => {\n      this.findAllBy({ labelId: { [Op.in]: labelIds } }, includes)\n        .then(resolve)\n        .catch(reject);\n    });\n  }\n}\n"],"file":"shortcut.js"}